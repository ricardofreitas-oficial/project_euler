/**
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
 * The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * Let us list the factors of the first seven triangle numbers:
 *  1: 1
 *  3: 1,3
 *  6: 1,2,3,6
 * 10: 1,2,5,10
 * 15: 1,3,5,15
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 * We can see that 28 is the first triangle number to have over five divisors.
 * What is the value of the first triangle number to have over five hundred divisors?
 */

const findFactors = (num) => {
  const factors = []
  let factor = 1, max = num

  while (factor < max) {
    if (num % factor === 0) {
      factors.push(factor)

      let key = num / factor
      if (factor !== key) {
        factors.push(key)
      }
      max = key
    }

    factor++
  }

  return factors.sort((a, b) => a - b)
}

const countFactors = (n) => {
  let triangleNumber = 0, sum = 1

  while (findFactors(triangleNumber).length <= n) {
    triangleNumber += sum
    sum++
  }

  return triangleNumber
}

const result = countFactors(500)
console.log(result) // response = 76576500